#!/bin/bash

# IP validity checker using regex
function valid_ip() {
    local ip=$1
    local regex="^([0-9]{1,3}\.){3}[0-9]{1,3}$"
    [[ $ip =~ $regex ]] || return 1

    IFS='.' read -r o1 o2 o3 o4 <<< "$ip"
    [[ $o1 -ge 0 && $o1 -le 255 && $o2 -ge 0 && $o2 -le 255 && $o3 -ge 0 && $o3 -le 255 && $o4 -ge 0 && $o4 -le 255 ]]
}

# Generate random IPs within 178.250.248.0/22
generate_ip() {
    local ip
    while true; do
        ip="178.250.$((248 + RANDOM % 4)).$((RANDOM % 256))"
        if valid_ip "$ip"; then
            echo "$ip"
            return
        fi
    done
}

# Ping-based IP quality checker
check_ip() {
    local ip=$1
    local ping_result
    ping_result=$(ping -c 1 -W 1 "$ip" | grep 'time=')
    if [[ $ping_result =~ time=([0-9.]+)\ ms ]]; then
        local latency=${BASH_REMATCH[1]}
        if (( $(echo "$latency < 70" | bc -l) )); then
            echo -e "\e[36m[$ip]\e[0m — Latency: ${latency} ms — \e[32mClean & Fast for Gaming\e[0m"
        else
            echo -e "\e[33m[$ip]\e[0m — Latency: ${latency} ms — \e[31mNot optimal for gaming\e[0m"
        fi
    else
        echo -e "\e[31m[$ip] — Unreachable\e[0m"
    fi
}

# Generate and test multiple IPs
echo -e "\nGenerating clean IPs from 178.250.248.0/22 for gaming...\n"
for i in {1..10}; do
    ip=$(generate_ip)
    check_ip "$ip"
done
