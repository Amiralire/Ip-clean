#!/bin/bash

IP_FILE="clean_ips.txt"

# Validate IP format using regex
valid_ip() {
    local ip=$1
    local regex="^([0-9]{1,3}\.){3}[0-9]{1,3}$"
    [[ $ip =~ $regex ]] || return 1
    IFS='.' read -r o1 o2 o3 o4 <<< "$ip"
    [[ $o1 -le 255 && $o2 -le 255 && $o3 -le 255 && $o4 -le 255 ]]
}

# Generate random IP in range 178.250.248.0/22
generate_ip() {
    while true; do
        ip="178.250.$((248 + RANDOM % 4)).$((RANDOM % 256))"
        valid_ip "$ip" && echo "$ip" && return
    done
}

# Ping IP and determine if it's clean
check_ip() {
    local ip=$1
    ping_result=$(ping -c 1 -W 1 "$ip" | grep 'time=')
    if [[ $ping_result =~ time=([0-9.]+)\ ms ]]; then
        local latency=${BASH_REMATCH[1]}
        if (( $(echo "$latency < 70" | bc -l) )); then
            echo -e "\e[32m[$ip] - Latency: ${latency}ms - CLEAN for Gaming\e[0m"
            add_clean_ip "$ip"
        else
            echo -e "\e[33m[$ip] - Latency: ${latency}ms - Moderate Quality\e[0m"
        fi
    else
        echo -e "\e[31m[$ip] - Unreachable\e[0m"
    fi
}

# Store clean IP in file if not already saved
add_clean_ip() {
    local ip=$1
    grep -Fxq "$ip" "$IP_FILE" 2>/dev/null || echo "$ip" >> "$IP_FILE"
}

# List saved clean IPs
list_clean_ips() {
    echo -e "\n\e[34mSaved Clean Gaming IPs:\e[0m"
    if [[ -s "$IP_FILE" ]]; then
        cat "$IP_FILE"
    else
        echo "No clean IPs saved yet."
    fi
}

# Remove specific IP
remove_ip() {
    local ip=$1
    if grep -q "$ip" "$IP_FILE"; then
        grep -v "$ip" "$IP_FILE" > tmp && mv tmp "$IP_FILE"
        echo -e "\e[31mRemoved $ip from saved list.\e[0m"
    else
        echo "IP not found in saved list."
    fi
}

# Menu for user
main_menu() {
    echo -e "\n\e[1;36mGaming Clean IP Panel\e[0m"
    echo "1. Generate & Check New IPs"
    echo "2. List Saved Clean IPs"
    echo "3. Remove IP from Saved List"
    echo "4. Exit"
    echo -n "Choose an option [1-4]: "
    read choice

    case "$choice" in
        1)
            echo -e "\nGenerating and checking new IPs...\n"
            for i in {1..20}; do
                ip=$(generate_ip)
                check_ip "$ip"
            done
            ;;
        2)
            list_clean_ips
            ;;
        3)
            echo -n "Enter IP to remove: "
            read del_ip
            remove_ip "$del_ip"
            ;;
        4)
            echo "Exiting."
            exit 0
            ;;
        *)
            echo "Invalid option."
            ;;
    esac
}

# Loop menu
while true; do
    main_menu
done
